name: Build, Deploy and release Docker images
on:
  workflow_call:
    inputs:
      docker_file:
        required: true
        type: string
      docker_image:
        required: true
        type: string
      github_ref:
        required: true
        type: string
    secrets:
      registry_user:
        required: true
      registry_password:
        required: true

jobs:
  build_deploy:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "Running on branch ${{ inputs.github_ref }}"
      - name: Checkout
        uses: actions/checkout@v2

      - name: Hadolint ${{ inputs.docker_file }}
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: ${{ inputs.docker_file }}
          format: tty
          failure-threshold: error # optional, default is info
          # A space separated string of rules to ignore
          ignore: # optional
          # Path to a config file
          config: # optional

      - name: Login to Movai Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.registry_user }}
          password: ${{ secrets.registry_password }}
          registry: registry.cloud.mov.ai

      - name: "Set puash and tag vars from github_ref"
        env:
          PUSH_VAR: ${{ contains(inputs.github_ref, 'refs/heads/main') || contains(inputs.github_ref, 'refs/heads/v*.*.*')}}
        run: |
          if ${PUSH_VAR} == true; then
            echo "push=true" >> $GITHUB_ENV
            echo "push flag set to true"
            echo "VERSION=${GITHUB_REF#*/}" >> $GITHUB_ENV
            echo "VERSION set to ${GITHUB_REF#*/}
          else
            echo "push=false" >> $GITHUB_ENV
            echo "push flag set to false"
            echo "VERSION=local" >> $GITHUB_ENV
            echo "VERSION set to local
          fi
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push ${{ inputs.docker_image }}:${{ steps.get_version.outputs.VERSION }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ inputs.docker_file }}
          push: ${{ env.push }}
          tags: |
            ${{ inputs.docker_image }}:${{ env.VERSION }}
          build-args:
          pull: true
